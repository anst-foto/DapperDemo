@startuml
'https://plantuml.com/class-diagram
package Model {
    class Role {
        + id : int
        + name : string
    }
    
    Role <--* Account
    class Account {
        + id : int
        + login : string
        + password : string
        + role : Role
        + is_active : bool
    }
    
    Account <-- User
    class User {
        + id : int
        + first_name : string
        + last_name : string
        + email : string
    }
}

Model <-- DataAccess
package DataAccess {
    interface ICrud<<T>> {
        + {abstract} Insert (data : T) : bool
        + {abstract} Update (data : T) : bool
        + {abstract} Delete (data : T) : bool
        + {abstract} FindSingle () : T[]
        + {abstract} FindById (id : int) : T
    }
    
    abstract class BaseTable<<T>> {
        - db : DbConnection
        # BaseTable(connection : string)
        # FindAll(sql : string) : T[]        
        # FindSingle(sql : string) : T        
        # Execute(sql : string) : bool        
    }
    
    Role <.. TableRoles
    ICrud <|.. TableRoles
    BaseTable <|-- TableRoles
    class TableRoles {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
    
    Account <.. TableAccounts
    ICrud <|.. TableAccounts
    BaseTable <|-- TableAccounts
    class TableAccounts {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
    
    User <.. TableUsers
    ICrud <|.. TableUsers
    BaseTable <|-- TableUsers
    class TableUsers {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
    
    TableRoles <--* DataBase
    TableAccounts <--* DataBase
    TableUsers <--* DataBase
    class DataBase {
        + roles : TableRoles
        + accounts : TableAccounts
        + users : TableUsers
    }
}

Model <-- App
DataAccess <-- App
package App {
    class CLI {
        - {static} Print(message : string, color : ConsoleColor) : void
        - {static} PrintLine(message : string, color : ConsoleColor) : void
        - {static} Input(message : string) : string
            
        + {static} InputString(message : string) : string
        + {static} InputNumber(message : string) : int
            
        + {static} PrintError(message : string) : void
        + {static} PrintInfo(message : string) : void
    }
    
    DataBase <.. Program
    CLI <-- Program
    class Program {
        + Main() : void
    }
    
    
}

@enduml