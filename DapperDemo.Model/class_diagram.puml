@startuml
'https://plantuml.com/class-diagram
package Model {
    class Role {
        + id : int
        + name : string
    }
    
    Role <--* Account
    class Account {
        + id : int
        + login : string
        + password : string
        + role : Role
        + is_active : bool
    }
    
    Account <-- User
    class User {
        + id : int
        + first_name : string
        + last_name : string
        + email : string
    }
}

Model <-- DataAccess
package DataAccess {
    interface ICrud<<T>> {
        + {abstract} Insert (data : T) : bool
        + {abstract} Update (data : T) : bool
        + {abstract} Delete (data : T) : bool
        + {abstract} FindSingle () : T[]
        + {abstract} FindById (id : int) : T
    }
    
    abstract class BaseTable<<T>> {
        - db : DbConnection
        # BaseTable(connection : string)
        # FindAll(sql : string) : T[]        
        # FindSingle(sql : string) : T        
        # Execute(sql : string) : bool        
    }
    
    Role <.. TableRole
    ICrud <|.. TableRole
    BaseTable <|-- TableRole
    class TableRole {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
    
    Account <.. TableAccount
    ICrud <|.. TableAccount
    BaseTable <|-- TableAccount
    class TableAccount {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
    
    User <.. TableUser
    ICrud <|.. TableUser
    BaseTable <|-- TableUser
    class TableUser {
        + Insert (data : object) : bool
        + Update (data : object) : bool
        + Delete (data : object) : bool
        + FindSingle () : object[]
        + FindById (id : int) : object
    }
}


@enduml